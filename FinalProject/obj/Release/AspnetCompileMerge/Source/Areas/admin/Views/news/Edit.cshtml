@model FinalProject.Models.news

@{
    ViewBag.Title = "Cập nhật tin tức";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1 class="text-center text-uppercase text-primary text-shadow">
        Cập nhật <i class="fa fa-cut"></i> Tin Tức
    </h1>
</div>
@using (Html.BeginForm("Edit", "news", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.Label("Tiêu đề", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Hình đại diện", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp,.svg" />
        </div>
        <div class="col-md-4">
            <img src="~/Content/img/save-img/@Model.img" width="100px" />
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Mô tả tin tức", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Nội dung tin tức", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.detail)
            @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.Label("Ẩn bản tin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
                }
                @Html.CheckBoxFor(model => hide)
            </div>
        </div>*@
    <div class="form-group">
        @Html.Label("Ẩn sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.hide, new List<SelectListItem> {
                new SelectListItem { Text = "Hiện", Value = "false" },
                new SelectListItem { Text = "Ẩn", Value = "true" }
            }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.order, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Ngày chỉnh sửa", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.datebegin, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.datebegin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section _Footer
{
    <script src="~/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("detail");
        var editor = CKEDITOR.replace("detail", { height: '600px' });
        customConfig: '~/Content/ckeditor/config.js'
    </script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("description");
        var editor = CKEDITOR.replace("description", { height: '600px' });
        customConfig: '~/Content/ckeditor/config.js'
    </script>
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/\./g, ""); // thêm replace(/\.+/g, "") vào cuối đoạn
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>

}
